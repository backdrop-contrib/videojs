<?php
/**
 * @file
 * Installation file for Video.js module.
 */

/**
 * Implements hook_requirements().
 */
function videojs_requirements($phase) {
  $requirements = array();
  $config = config('videojs.settings');

  if ($phase == 'runtime') {
    $requirements['videojs']['title'] = t('Video.js');
    $videojs_version = videojs_get_version();
    if ($videojs_version == NULL) {
      $requirements['videojs']['value'] = t('Not found');
      $requirements['videojs']['description'] = t('Missing the Video.js library. Please <a href="!url">download Video.js</a> and extract it into the %directory directory.', array('!url' => url('http://videojs.com'), '%directory' => $config->get('directory')));
      $requirements['videojs']['severity'] = REQUIREMENT_ERROR;
    }
    elseif (version_compare($videojs_version, '4', '<')) {
      $requirements['videojs']['value'] = t('Unsupported Video.js version @version', array('@version' => $videojs_version));
      $requirements['videojs']['description'] = t('The installed version of the Video.js library is not supported. This version of the Video.js module only supports Video.js version 4 or higher. <a href="@videojs-url">Download Video.js version 4</a> and extract it into the %directory directory.', array('@videojs-url' => url('http://videojs.com'), '%directory' => $config->get('directory')));
      $requirements['videojs']['severity'] = REQUIREMENT_ERROR;
    }
    else {
      $requirements['videojs']['value'] = $videojs_version;
      $requirements['videojs']['severity'] = REQUIREMENT_OK;
    }
  }

  return $requirements;
}

/**
 * Implements hook_update_last_removed().
 */
function videojs_update_last_removed() {
  return 7200;
}

/**
 * Move Videojs settings from variables to config.
 */
function videojs_update_1000() {
  // Migrate variables to config.
  $config = config('videojs.settings');
  $config->set('location', update_variable_get('videojs_location', 'cdn'));
  $config->set('directory', update_variable_get('videojs_directory', 'libraries/video-js'));
  $config->set('loop', update_variable_get('videojs_loop', FALSE));
  $config->set('hidecontrols', update_variable_get('videojs_hidecontrols', FALSE));
  $config->set('autoplay', update_variable_get('videojs_autoplay', FALSE));
  $config->set('width', update_variable_get('videojs_width', 640));
  $config->set('height', update_variable_get('videojs_height', 360));
  $config->set('preload', update_variable_get('videojs_preload', 'auto'));
  $config->set('defaulttrack', update_variable_get('videojs_defaulttrack', ''));
  $config->set('directory', update_variable_get('videojs_directory', 'libraries/video-js'));
  $config->save();

  // Delete variables.
  update_variable_del('videojs_location');
  update_variable_del('videojs_directory');
  update_variable_del('videojs_loop');
  update_variable_del('videojs_hidecontrols');
  update_variable_del('videojs_autoplay');
  update_variable_del('videojs_width');
  update_variable_del('videojs_height');
  update_variable_del('videojs_preload');
  update_variable_del('videojs_defaulttrack');
  update_variable_del('videojs_directory');
}
